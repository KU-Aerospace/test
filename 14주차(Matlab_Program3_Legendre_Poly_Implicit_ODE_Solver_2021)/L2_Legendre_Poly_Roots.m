%-------------------------------------------------------------------------
% Legdre polynomial and its derivative
%-------------------------------------------------------------------------
function [tau_vec] = L2_Legendre_Poly_Roots(N)
%-------------------------------------------------------------------------
%  (1) When N= 1
%-------------------------------------------------------------------------
   if N==1 
       tau_vec(1) = 0.0  ;
   else 
%-------------------------------------------------------------------------
%  (2) When N >= 2
%-------------------------------------------------------------------------
       tau_vec(1) = 0.0  ;
%-------------------------------------------------------------------------
       t_vec(1) = 0.5*( tau_vec(1) - 1.0 )  ;
       t_vec(2) = 0.5*( tau_vec(1) + 1.0 )  ;
%       
       tau1 = t_vec(1)   ;
       [tau1] = L2_Legendre_Poly_Root_one(2,tau1)  ;
       tau_vec(1) = tau1 ;
%       
       tau2 = t_vec(2)   ;
       [tau2] = L2_Legendre_Poly_Root_one(2,tau2)  ;
       tau_vec(2) = tau2 ;
%-------------------------------------------------------------------------
%  (3) When N >= 3
%-------------------------------------------------------------------------
       if (N >= 3)
%-------------------------------------------------------------------------
           for j = 3:N
%-------------------------------------------------------------------------
%  (3-1) Initial guess of roots
%-------------------------------------------------------------------------
               t_vec(1) = 0.5*( tau_vec(1) - 1.0 )  ;
               for k=2:j-1   
                   km = k-1 ;
                   t_vec(k) = 0.5*( tau_vec(k) + tau_vec(km)  )  ;
               end
               t_vec(j) = 0.5*( tau_vec(j-1) + 1.0 )  ;
%-------------------------------------------------------------------------
%  (3-2) Finding roots using Newton-Raphson method
%-------------------------------------------------------------------------
               for k=1:j  
                   tau1 = t_vec(k) ;
                   [tau1] = L2_Legendre_Poly_Root_one(j,tau1)  ;
                   tau_vec(k) = tau1 ;
               end
%-------------------------------------------------------------------------
           end
%-------------------------------------------------------------------------
       end
%-------------------------------------------------------------------------
   end;
%-------------------------------------------------------------------------
end   
%-------------------------------------------------------------------------
